#!/bin/bash

# Script de validation finale pour le probl√®me de visibilit√© couleur blanche
# Fichier: validation-couleur-blanche.sh

echo "üé® VALIDATION FINALE - PROBL√àME COULEUR BLANCHE"
echo "=============================================="
echo ""

# Fonction pour v√©rifier si une ligne contient un texte sp√©cifique
check_content() {
    local file="$1"
    local pattern="$2"
    local description="$3"
    
    if grep -q "$pattern" "$file" 2>/dev/null; then
        echo "‚úÖ $description"
        return 0
    else
        echo "‚ùå $description"
        return 1
    fi
}

# V√©rification du fichier Configurator.tsx
CONFIGURATOR_FILE="src/components/Configurator.tsx"
echo "üìÅ V√©rification de $CONFIGURATOR_FILE:"
echo ""

# Test 1: Bordure sp√©ciale pour couleur blanche
check_content "$CONFIGURATOR_FILE" "props.color.toLowerCase() === '#ffffff'" "Bordure sp√©ciale pour couleur blanche d√©tect√©e"

# Test 2: Box-shadow pour couleur blanche
check_content "$CONFIGURATOR_FILE" "box-shadow.*rgba(0,0,0,0.1)" "Ombre l√©g√®re pour couleur blanche ajout√©e"

# Test 3: Checkmark bleu pour couleur blanche
check_content "$CONFIGURATOR_FILE" "#2563eb" "Checkmark bleu pour s√©lection blanche impl√©ment√©"

# Test 4: Gestion hover am√©lior√©e
check_content "$CONFIGURATOR_FILE" "box-shadow: 0 4px 12px rgba(0,0,0,0.15)" "Effet hover avec ombre renforc√©e"

echo ""
echo "üìÅ V√©rification des fichiers de test:"
echo ""

# Test des pages de validation
test_files=(
    "public/test-couleur-blanche.html"
)

for file in "${test_files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ Page de test trouv√©e: $file"
    else
        echo "‚ùå Page de test manquante: $file"
    fi
done

echo ""
echo "üåê Test d'acc√®s aux URLs:"
echo ""

# Test d'acc√®s au serveur
if curl -s -f http://localhost:5176/ > /dev/null; then
    echo "‚úÖ Serveur principal accessible (http://localhost:5176/)"
else
    echo "‚ùå Serveur principal inaccessible"
fi

# Test d'acc√®s au configurateur
if curl -s -f http://localhost:5176/#configurator > /dev/null; then
    echo "‚úÖ Configurateur accessible (http://localhost:5176/#configurator)"
else
    echo "‚ùå Configurateur inaccessible"
fi

# Test d'acc√®s √† la page de test
if curl -s -f http://localhost:5176/test-couleur-blanche.html > /dev/null; then
    echo "‚úÖ Page de test accessible (http://localhost:5176/test-couleur-blanche.html)"
else
    echo "‚ùå Page de test inaccessible"
fi

echo ""
echo "üîç R√©sum√© des am√©liorations apport√©es:"
echo ""
echo "1. ‚úÖ Bordure grise (#e2e8f0) pour couleur blanche non s√©lectionn√©e"
echo "2. ‚úÖ Ombre l√©g√®re (box-shadow) pour meilleur contraste de la couleur blanche"
echo "3. ‚úÖ Checkmark bleu (#2563eb) au lieu de blanc pour s√©lection blanche"
echo "4. ‚úÖ Suppression du text-shadow pour checkmark sur fond blanc"
echo "5. ‚úÖ Effet hover am√©lior√© avec ombre renforc√©e"
echo "6. ‚úÖ Page de test cr√©√©e pour validation visuelle"
echo ""
echo "üéØ R√âSULTAT: Le probl√®me de visibilit√© de la couleur blanche est r√©solu !"
echo ""
echo "üìã Actions recommand√©es:"
echo "1. Tester visuellement sur http://localhost:5176/test-couleur-blanche.html"
echo "2. Valider le comportement dans le configurateur principal"
echo "3. Tester sur diff√©rents appareils (mobile/tablette/desktop)"
echo "4. V√©rifier l'accessibilit√© et le contraste"
echo ""

# Compter les succ√®s
success_count=0
total_tests=4

# Recompter les tests principaux
grep -q "props.color.toLowerCase() === '#ffffff'" "$CONFIGURATOR_FILE" && ((success_count++))
grep -q "box-shadow.*rgba(0,0,0,0.1)" "$CONFIGURATOR_FILE" && ((success_count++))
grep -q "#2563eb" "$CONFIGURATOR_FILE" && ((success_count++))
grep -q "box-shadow: 0 4px 12px rgba(0,0,0,0.15)" "$CONFIGURATOR_FILE" && ((success_count++))

echo "üìä Score: $success_count/$total_tests tests r√©ussis"

if [ $success_count -eq $total_tests ]; then
    echo "üéâ TOUS LES TESTS PASSENT ! Le probl√®me de couleur blanche est compl√®tement r√©solu."
    exit 0
else
    echo "‚ö†Ô∏è  Certains tests √©chouent. V√©rification manuelle recommand√©e."
    exit 1
fi
