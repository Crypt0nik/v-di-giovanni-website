// Test de connexion API simple
const API_URL = 'http://127.0.0.1:8002/api';

async function testApiConnection() {
    console.log('üîç Test de connexion API...');
    console.log(`üìç URL de base: ${API_URL}`);
    
    try {
        // Test 1: V√©rification de base avec la documentation Swagger
        console.log('\n1Ô∏è‚É£ Test de connectivit√© de base...');
        const healthResponse = await fetch(`${API_URL}/documentation`, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
            },
        });
        
        console.log(`Status: ${healthResponse.status}`);
        if (healthResponse.ok) {
            console.log('‚úÖ Connexion √©tablie - Documentation accessible');
        } else {
            console.log('‚ùå Erreur de connexion:', healthResponse.statusText);
        }
        
        // Test 2: R√©cup√©ration des produits
        console.log('\n2Ô∏è‚É£ Test de r√©cup√©ration des produits...');
        const productsResponse = await fetch(`${API_URL}/products`, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
            },
        });
        
        console.log(`Status: ${productsResponse.status}`);
        if (productsResponse.ok) {
            const productsData = await productsResponse.json();
            console.log(`‚úÖ ${productsData.data?.length || 0} produits r√©cup√©r√©s`);
            console.log('Premier produit:', productsData.data?.[0] || 'Aucun');
        } else {
            console.log('‚ùå Erreur produits:', productsResponse.statusText);
        }
        
        // Test 3: Test d'un produit sp√©cifique (si des produits existent)
        console.log('\n3Ô∏è‚É£ Test de r√©cup√©ration d\'un produit sp√©cifique...');
        const singleProductResponse = await fetch(`${API_URL}/products/1`, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
            },
        });
        
        console.log(`Status: ${singleProductResponse.status}`);
        if (singleProductResponse.ok) {
            const productData = await singleProductResponse.json();
            console.log('‚úÖ Produit r√©cup√©r√©:', productData.data || productData);
        } else {
            console.log('‚ùå Erreur produit sp√©cifique:', singleProductResponse.statusText);
        }
        
    } catch (error) {
        console.error('üí• Erreur r√©seau:', error);
    }
}

// Ex√©cuter le test
testApiConnection();
